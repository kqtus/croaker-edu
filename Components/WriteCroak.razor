@using System.Collections.Generic
@using Microsoft.AspNetCore.Identity
@using AspNetCore.Identity.LiteDB.Models
@using edu_croaker.Dtos
@using edu_croaker.Services

@inject CroakService CroakSrv
@inject UserManager<ApplicationUser> UserMgr

@namespace Components

<div class="modal fade" id="write-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">What's up?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h5>Content</h5>
                <textarea type="text"
                          class="form-control"
                          placeholder="Write here..."
                          aria-describedby="send-btn"
                          @bind="NewCroakContent"></textarea>
                <h5 style="padding-top: 15px">Tags</h5>
                <div class="input-group mb-3">
                    <input type="text"
                           class="form-control"
                           placeholder="Tag..."
                           aria-label="Tag..."
                           aria-describedby="button-add"
                           @bind="CurrentHashtag" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary"
                                type="button"
                                id="button-add"
                                @onclick="AddHashtag">
                            Add
                        </button>
                    </div>
                </div>
                <div>
                    @foreach (var hashtag in Hashtags.Select((x, idx) => new { val = x, index = idx }))
                    {
                        <a @onclick="@(() => RemoveHashtag(@hashtag.index))"
                           class="badge badge-pill badge-light pointer">
                            #@hashtag.val
                        </a>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button @onclick="Send"
                        type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">
                    Send
                </button>
            </div>
        </div>
    </div>
</div>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private string NewCroakContent { get; set; }

    private string CurrentHashtag { get; set; }

    private List<string> Hashtags { get; set; } = new List<string>();

    private async Task Send()
    {
        if (!string.IsNullOrWhiteSpace(NewCroakContent))
        {
            var authState = await AuthenticationStateTask;
            var user = authState.User;

            CroakSrv.AddCroakAsync(new CroakDto()
            {
                AuthorId = UserMgr.GetUserId(authState.User),
                Content = NewCroakContent,
                Hashtags = Hashtags
            });

            NewCroakContent = string.Empty;
            CurrentHashtag = string.Empty;
        }
    }

    private void AddHashtag()
    {
        if (!string.IsNullOrWhiteSpace(CurrentHashtag))
        {
            Hashtags.Add(CurrentHashtag);
            CurrentHashtag = string.Empty;
        }
    }

    private void RemoveHashtag(int idx)
    {
        int a = idx;
        Hashtags.RemoveAt(idx);
    }
}