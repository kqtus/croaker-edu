@using System.Collections.Generic
@using edu_croaker.Data
@using edu_croaker.Dtos
@inject UserService UserSrv
@namespace Components

<style>
    .icon {
        font-size: 14px;
    }

    .profile-content {
        text-align: center;
    }

    .profile-footer {
        margin-top: 10px;
        text-align: right;
    }
</style>

<div class="card sticky-side-bar">
    <div class="card-body">
        <h5>Hey, @@@UserData.Username</h5>

        <div class="profile-content">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-light">
                    <a href="#">@UserData.PostsCount</a>
                    <p class="text-muted">Posts</p>
                </button>
                <button type="button" class="btn btn-light">
                    <a href="#">@UserData.LikesCount</a>
                    <p class="text-muted">Likes</p>
                </button>
                <button type="button" class="btn btn-light">
                    <a href="#">@UserData.SharesCount</a>
                    <p class="text-muted">Shares</p>
                </button>
            </div>

            <div class="profile-footer">
                <button 
                    type="button"
                    class="btn btn-outline-primary"
                    data-toggle="modal" 
                    data-target="#write-modal"
                >Write
                    <i class="material-icons icon">
                        create
                    </i>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private int currSignedUserId = 0;
    private bool displayingCurrSignedUser = true;

    private PublicUserData userData;
    public PublicUserData UserData 
    {
        get => userData;
        set 
        {
            userData = value;
            displayingCurrSignedUser = userData.UserId == currSignedUserId;
        }
    } 

    protected override async Task OnInitializedAsync()
    {
        currSignedUserId = await UserSrv.GetCurrentUserId();
        await FetchUserData(currSignedUserId);
    }

    protected async Task FetchUserData(int userId)
    {
        UserData = await UserSrv.GetPublicUserData(userId);
        StateHasChanged();
    }
}